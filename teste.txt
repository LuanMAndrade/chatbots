from onboarding.models import Plan, ClientSubscription, BotInstance, PortRegistry
from django.contrib.auth.models import User
from datetime import date

# ==============================================
# CONFIGURA√á√ÉO DOS SEUS CLIENTES
# ==============================================


# Lista com os dados de cada cliente
clientes = [
    {
        'username': 'victoria',  # AJUSTAR
        'plano_id': 1,  # 1=B√°sico, 2=Profissional, 3=Empresarial
        'bot_folder': 'bot_victoria',  # AJUSTAR
        'porta_uvicorn': 8004,  # AJUSTAR
        'porta_evolution': 8081,  # AJUSTAR ou None
        'billing_day': 18,  # AJUSTAR: dia da cobran√ßa (1-28)
        'data_inicio': date(2025, 1, 1),  # AJUSTAR: quando come√ßou
    },
    {
        'username': 'lorena',  # AJUSTAR
        'plano_id': 1,  # B√°sico
        'bot_folder': 'bot_lorena',  # AJUSTAR
        'porta_uvicorn': 8003,  # AJUSTAR
        'porta_evolution': 8081,  # AJUSTAR ou None
        'billing_day': 18,
        'data_inicio': date(2025, 1, 5),
    },
    {
        'username': 'model',  # AJUSTAR
        'plano_id': 3,  # Empresarial
        'bot_folder': 'bot_model',  # AJUSTAR
        'porta_uvicorn': 8002,  # AJUSTAR
        'porta_evolution': 8081,  # N√£o usa Evolution
        'billing_day': 18,
        'data_inicio': date(2025, 1, 10),
    },
    # ADICIONE MAIS CLIENTES AQUI...
]

# ==============================================
# EXECUTAR CRIA√á√ÉO
# ==============================================

print("=== CRIANDO SUBSCRIPTIONS PARA CLIENTES EXISTENTES ===\n")

erros = []

for dados in clientes:
    try:
        print(f"Processando: {dados['username']}...")
        
        # 1. Buscar usu√°rio
        try:
            user = User.objects.get(username=dados['username'])
        except User.DoesNotExist:
            raise Exception(f"Usu√°rio '{dados['username']}' n√£o encontrado!")
        
        # 2. Verificar se j√° tem subscription
        if hasattr(user, 'subscription'):
            print(f"  ‚ö†Ô∏è  {dados['username']} j√° tem subscription! Pulando...")
            continue
        
        # 3. Buscar plano
        plano = Plan.objects.get(id=dados['plano_id'])
        
        # 4. Criar subscription
        subscription = ClientSubscription.objects.create(
            user=user,
            plano=plano,
            tokens_incluidos_no_plano=plano.tokens_incluidos,
            billing_day=dados['billing_day'],
            data_inicio=dados['data_inicio'],
            status='active'
        )
        print(f"  ‚úì Subscription criada: {plano.nome}")
        
        # 5. Criar bot instance
        bot = BotInstance.objects.create(
            subscription=subscription,
            bot_folder_name=dados['bot_folder'],
            porta_uvicorn=dados['porta_uvicorn'],
            porta_evolution=dados['porta_evolution'],
            status='active',
            systemd_service_name=f"{dados['bot_folder']}.service",
            systemd_scheduler_name=f"{dados['bot_folder']}_agendador.service"
        )
        print(f"  ‚úì Bot criado: {dados['bot_folder']} (porta {dados['porta_uvicorn']})")
        
        # 6. Registrar portas
        PortRegistry.objects.create(
            porta=dados['porta_uvicorn'],
            tipo='uvicorn',
            bot_instance=bot,
            em_uso=True
        )
        print(f"  ‚úì Porta {dados['porta_uvicorn']} registrada (uvicorn)")
        
        if dados['porta_evolution']:
            PortRegistry.objects.create(
                porta=dados['porta_evolution'],
                tipo='evolution',
                bot_instance=bot,
                em_uso=True
            )
            print(f"  ‚úì Porta {dados['porta_evolution']} registrada (evolution)")
        
        print(f"  ‚úÖ {dados['username']} - COMPLETO!\n")
        
    except Exception as e:
        erro = f"‚ùå ERRO em {dados['username']}: {str(e)}"
        print(f"  {erro}\n")
        erros.append(erro)

print("=" * 60)
print("\nüìä RESUMO:")
print(f"Total de clientes processados: {len(clientes)}")
print(f"Sucessos: {len(clientes) - len(erros)}")
print(f"Erros: {len(erros)}")

if erros:
    print("\n‚ö†Ô∏è  ERROS ENCONTRADOS:")
    for erro in erros:
        print(f"  {erro}")
else:
    print("\n‚úÖ TODOS OS CLIENTES MIGRADOS COM SUCESSO!")

# Verificar resultado
print("\n=== VERIFICA√á√ÉO FINAL ===")
print(f"Subscriptions criadas: {ClientSubscription.objects.count()}")
print(f"Bots criados: {BotInstance.objects.count()}")
print(f"Portas registradas: {PortRegistry.objects.count()}")